{{- define "Main"}}
// Code generated by protov. DO NOT EDIT.
// versions:
// 	protov        v0.0.1
// 	protolizer    v0.0.1
// source: {{.Source}}
package {{.PackageName}}

import (
    "bytes"
    "fmt"
    "io"

    "github.com/vedadiyan/protolizer"
)

{{- range $service := .Services }}
    func {{$service.Name}}() {
        type ServiceOptions struct {
            {{- template "parseMap" $service.Options }}
        }
       {{- range $rpc := $service.Rpcs}}
            type {{$rpc.Name}}RpcOptions struct {
                {{- template "parseMap" $rpc.Options }}
            }
        {{- end }}
        type {{$service.Name}} interface {
            Init({{$service.Name}}Options) error
            {{- range $rpc := $service.Rpcs}}
            {{$rpc.Name}}({{$rpc.Input}})*{{$rpc.Output}}
            {{- end }}
        }        

    }
{{- end }}
{{- end }}


{{- define "parseMap" -}}
  {{- range $key, $value := . }}
    {{- if eq (printf "%T" $value) "map[string]interface {}" }}
      {{$key}} struct {
        {{- template "parseMap" $value }}
      }
    {{- else }}
      {{$key}} {{(printf "%T" $value)}}
    {{- end }}
  {{- end }}
{{- end }}
